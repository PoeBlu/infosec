=>  0x8048a42:  push  ebp
  0x8048a43:  mov  ebp,esp
  0x8048a45:  push  ebx
  0x8048a46:  sub  esp,0x14
  0x8048a49:  mov  DWORD  PTR  [ebp-0x10],0x6   ; len of string that this function checks ('packer')
  0x8048a50:  mov  DWORD  PTR  [ebp-0xc],0x1
  0x8048a57:  jmp  0x8048a93
  0x8048a59:  mov  eax,DWORD  PTR  [ebp-0xc]
  0x8048a5c:  add  eax,0x4
  0x8048a5f:  mov  edx,eax
  0x8048a61:  mov  eax,DWORD  PTR  [ebp+0x18]  ;  $ebp+0x18  is  our  string  buffer
  0x8048a64:  add  eax,edx
  0x8048a66:  movzx  eax,BYTE  PTR  [eax]
  0x8048a69:  movsx  ebx,al
  0x8048a6c:  sub  esp,0x4
  0x8048a6f:  push  DWORD  PTR  [ebp-0xc]
  0x8048a72:  push  0x36
  0x8048a77:  push  0x804873a
  0x8048a7c:  call  0x80485e0  ;  decrypt  procedure
  0x8048a81:  add  esp,0x10
  0x8048a84:  cmp  ebx,eax                      ; eax contains our characters, this reveals the first 6 
  0x8048a86:  je  0x8048a8f
  0x8048a88:  mov  eax,0x0
  0x8048a8d:  jmp  0x8048aa0
  0x8048a8f:  add  DWORD  PTR  [ebp-0xc],0x1
  0x8048a93:  mov  eax,DWORD  PTR  [ebp-0xc]
  0x8048a96:  cmp  eax,DWORD  PTR  [ebp-0x10]   ; might be desired string length
  0x8048a99:  jle  0x8048a59
  0x8048a9b:  mov  eax,0x1
  0x8048aa0:  mov  ebx,DWORD  PTR  [ebp-0x4]
  0x8048aa3:  leave  
  0x8048aa4:  ret
